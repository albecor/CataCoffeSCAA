package com.spring.coffee.model;
// Generated 12/09/2017 01:17:12 PM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Panel generated by hbm2java
 */
@Entity
@Table(name = "panel", catalog = "coffee")
public class Panel implements java.io.Serializable {

	private Integer id;
	private Date authorizationDate;
	private Date realizationDate;
	private byte finished;
	private Set<Tests> testses = new HashSet<Tests>(0);

	public Panel() {
	}

	public Panel(byte finished) {
		this.finished = finished;
	}

	public Panel(Date authorizationDate, Date realizationDate, byte finished, Set<Tests> testses) {
		this.authorizationDate = authorizationDate;
		this.realizationDate = realizationDate;
		this.finished = finished;
		this.testses = testses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "authorization_date", length = 19)
	public Date getAuthorizationDate() {
		return this.authorizationDate;
	}

	public void setAuthorizationDate(Date authorizationDate) {
		this.authorizationDate = authorizationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "realization_date", length = 19)
	public Date getRealizationDate() {
		return this.realizationDate;
	}

	public void setRealizationDate(Date realizationDate) {
		this.realizationDate = realizationDate;
	}

	@Column(name = "finished", nullable = false)
	public byte getFinished() {
		return this.finished;
	}

	public void setFinished(byte finished) {
		this.finished = finished;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "panel")
	public Set<Tests> getTestses() {
		return this.testses;
	}

	public void setTestses(Set<Tests> testses) {
		this.testses = testses;
	}

	@Override
	public String toString() {
		return "Panel [id=" + id + ", authorizationDate=" + authorizationDate + ", realizationDate=" + realizationDate
				+ ", finished=" + finished + ", testses=" + testses + "]";
	}

}
